(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{360:function(s,t,a){"use strict";a.r(t);var v=a(5),_=Object(v.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("之前写过一篇文章介绍了一下自己使用编辑器的历程，现在回顾来看，觉得自己还是迷失了。\n趁着这两天又一次在 Vim 和 Emacs 之间反复横跳，重新整理一下自己的思绪。")]),s._v(" "),t("h1",{attrs:{id:"vim-还是-emacs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vim-还是-emacs"}},[s._v("#")]),s._v(" Vim 还是 Emacs？")]),s._v(" "),t("p",[s._v("我现在觉得，选择一个编辑器是相当私人的一件事，甚至到选择主题配色、桌面管理系统、操作系统，都是完完全全出自个人的喜好。简单来说，能存活这么久的工具，一定是能够胜任日常的工作的，只不过实现的方式各有不同。真正关键的点不是在一开始的时候就花大量的时间修改配置，也不是去搜索各种各样的对比文章，而是“把手弄脏”，去使用它完成自己要去做的事。")]),s._v(" "),t("p",[s._v("我在一开始的时候，很容易陷入寻找最优配置的漩涡，比如最开始学习 Vim 的时候，直接使用了别人很完善的配置，装了好多好多插件，结果是我完全不知道怎么去使用那些花哨的功能，学习的过程也异常艰难。但我也并不是说完全不用别人的配置，使用别人花大量心血写出来的配置方案，一定程度上是可以省去很多时间的，所以关键还是要去使用它，遇到问题就去查，想办法解决，在这个过程中才能把别人的工具变成自己的。")]),s._v(" "),t("p",[s._v("至于我的话，还是比较喜欢 Vim 的设计，给编辑分不同的模式，感觉确实可以提升编辑的体验。而 Emacs 中各种天马行空的插件，也让我想要尝试 Emacs，于是我现在其实使用的是"),t("strong",[s._v("Emacs + Evil Mode")]),s._v(", 这样的话既可以体验 Emacs，也可以使用 Vim 中的编辑模式，目前感觉体验还是不错的。")]),s._v(" "),t("p",[s._v("还是要明白一个道理，没有最好的工具，只有最适合我们的工具。喜欢，就去使用。")]),s._v(" "),t("h1",{attrs:{id:"如何去学习一个东西"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何去学习一个东西"}},[s._v("#")]),s._v(" 如何去学习一个东西？")]),s._v(" "),t("p",[s._v("学习是一个实践的过程，一定不能让学习停留在大脑这个阶段，我看了就是学会了，这种想法不可取。无论是学习一门编程语言，还是学习使用一个工具，最佳的办法就是使用它。\n想要学习 Rust？没问题，忘掉其他所有学习过的语言，把所有任务都使用 Rust 来实现。\n想要学习 Yabai？没问题，忘掉浮动式桌面的操作模式，强迫自己使用快捷键来管理窗口。\n想要学习健身？没问题，放下虚荣心，到健身房里摸摸那些器械，感受自己的身体带来的反馈。\n想要学习投资？没问题，不要光看投资文章，把钱丢进股市里面。\n不去做，永远也不算真正学会。")]),s._v(" "),t("p",[s._v("p.s. 以上的想法可能会有些偏激，只是为了说明这个观点，实际操作中会更加复杂。")]),s._v(" "),t("h1",{attrs:{id:"学习是一个长期的过程。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习是一个长期的过程。"}},[s._v("#")]),s._v(" 学习是一个长期的过程。")]),s._v(" "),t("p",[s._v("这句话总是对的。")])])}),[],!1,null,null,null);t.default=_.exports}}]);